name: CI

on:
  push:
    branches: [ main, master, develop ]
  pull_request:
    branches: [ main, master, develop ]

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:16
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: organiza_feature_test
        ports:
          - "5432:5432"
        options: >-
          --health-cmd="pg_isready -U postgres"
          --health-interval=5s
          --health-timeout=5s
          --health-retries=10

    env:
      RAILS_ENV: test
      DATABASE_URL: postgres://postgres:postgres@localhost:5432/organiza_feature_test

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      # --- pnpm antes do Node ---
      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 9
          run_install: false  # evita instalar deps automaticamente

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "pnpm"

      - name: Install JS deps
        run: pnpm install --frozen-lockfile

      # --- Ruby / Bundler ---
      - name: Setup Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: .ruby-version
          bundler-cache: true

      # --- Banco de dados ---
      - name: Wait for Postgres
        run: |
          for i in `seq 1 30`; do
            pg_isready -h localhost -p 5432 -U postgres && break
            sleep 1
          done

      - name: DB prepare
        run: bundle exec rails db:prepare

      # --- Linters e testes ---
      - name: RuboCop
        run: bundle exec rubocop --parallel

      - name: RSpec
        run: bundle exec rspec

      - name: ESLint (pnpm lint)
        run: pnpm lint
